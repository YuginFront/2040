// Global Base variables
// name started with '__' (double _) and use camelCamp name style

$__useBXZForAll: 0; // switch off 'box-sizing: border-box;' in mixins
// Colors
$__textColor: #000;
$__bgColor: #fff;
$__borderColor: $__textColor;
//Icons
$__icon_font_name: '';
$__sprite_url: "../img/sprite.png";

$__use-category-comments: true; // use `true` for dev version
$__use-css-comments: true; // use `true` for dev version
$__viewport: ''; // buffer variable
// View port breakpoints
$__viewports: (
        xs:'',
        sm: 560px,
        md: 768px,
        lg: 1025px,
        xl: 1260px,
);
// Media queries rules
$__media: (
        xs: '',
        sm: 'only screen and (min-width: #{map_get($__viewports, sm)})',
        md: "only screen and (min-width: #{map_get($__viewports, md)})",
        lg: "only screen and (min-width: #{map_get($__viewports, lg)})",
        xl: "only screen and (min-width: #{map_get($__viewports, xl)})",
        dev: "only screen and (max-width: #{map_get($__viewports, lg)-1px})",
        mob: "only screen and (max-width: #{map_get($__viewports, md)-1px})",
        xso: "only screen and (max-width: #{map_get($__viewports, sm)-1px})",
        smo: "only screen and (min-width: #{map_get($__viewports, sm)}) and (max-width: #{map_get($__viewports, md)-1px})",
        mdo: "only screen and (min-width: #{map_get($__viewports, md)}) and (max-width: #{map_get($__viewports, lg)-1px})",
        lgo: "only screen and (min-width: #{map_get($__viewports, lg)}) and (max-width: #{map_get($__viewports, xl)-1px})",
);

// Categories
$__categories: (
        typography,
        helpers,
        structure,
        buttons,
        lists,
        blocks,
        forms,
        tables,
        other,
        vendor
);

// Global Project variables
// name started with 'g_' and use camelCamp name style
$__useGridFlex: 0;

// FN _font(style,key)
/// fw
$g_FontWeight: (
        xthink:200,
        think:300,
        regular:400,
        medium:500,
        sbold:600,
        bold:700,
        xbold:900
);
/// ff
$g_FontFamily: (
        base: ('Lato', sans-serif),
        second: ('Ubuntu', sans-serif)
);
/// lh
$g_LineHeight: (
        base: 1.5em,
       
        lh_h1_xs: 1.45454545em,
        lh_h2_xs: 1.84615385em,
        lh_h3_xs: 1.2em,
        lh_h4_xs: 1.5em,
        lh_h5_xs: 1.5em,
        lh_h6_xs: 1.5em,

        lh_h1: 1em,
        lh_h2: 1.45454545em,
        lh_h3: 1.04347826em,
        lh_h4: 1.5em,
        lh_h5: 1.5em,
        lh_h6: 1.5em

);
/// fz
$g_FontSize: (
        base: 16px,

        h1_xs: 2.0625em,
        h2_xs: 1.625em,
        h3_xs: 1.25em,
        h4_xs: 1em,
        h5_xs: 1em,
        h6_xs: 1em,

        h1: 3em,
        h2: 2.0625em,
        h3: 1.4375em,
        h4: 1em,
        h5: 1em,
        h6: 1em
);

// FN _color()
$g_Color: (
    // DEF

        white: #fff,
        red: #BC1B47,
        black: #2B2B2B,
        blackTrue: #000, 
        blackSecond: #424242,
        brandColor: #0044E9,
        greyText: #7F8694,
        stroke: #DCDEE2

    // OTHER
);

// FN _width()
$g_Width: (
);

// FN _height()
$g_Height: (
        
);

// FN _size() - global edit
$g_Size: (
    // DEF
        // bdrs: 0px
    // OTHER
);

// FN _ind()
$g_Indentations: (

        h1_xs: 0.72727273em 0 1.45454546em,
        h2_xs: 0.92307692em 0 0.92307692em,
        h3_xs: 1.2em 0 0em,
        h4_xs: 1.5em 0 0em,
        h5_xs: 1.5em 0 0em,
        h6_xs: 1.5em 0 0em,

        h1: 0.5em 0 1em,
        h2: 0.72727273em 0 0.72727273em,
        h3: 1.04347826em 0 0,
        h4: 1.5em 0 0,
        h5: 1.5em 0 0,
        h6: 1.5em 0 0,

        p: 0 0 1em
);

// FN _bgc()
$g_BgColors: (
        body: _color(white),
        input:  _color(white),
        td:  _color(white),
        border: _color(stroke)
);

// FN _bgi()
$g_BgImages: (
);